{"version":3,"file":"static/js/451.e6404f60.chunk.js","mappings":"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","sources":["components/ListMovies/ListMovies.styled.jsx","components/ListMovies/ListMovies.jsx","components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.jsx","services/getApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li``;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item } from './ListMovies.styled';\n\nconst ListMovies = ({ listMovies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {listMovies.map(({ id, title, name }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title ?? name}\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\nListMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ListMovies;\n","import styled from 'styled-components';\n\nexport const Form = styled.form``;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 25px;\n\n  &:hover {\n    border-color: blue;\n  }\n`;\nexport const Button = styled.button`\n  height: 25px;\n`;\n","import { useForm } from 'react-hook-form';\nimport { Form, Input, Button } from './SearchMovies.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchMovies = ({ handleSub }) => {\n  const { register, handleSubmit, reset } = useForm();\n\n  const onSubmit = ({ name }) => {\n    if (!name.trim()) {\n      return;\n    }\n\n    handleSub(name);\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input defaultValue={''} {...register('name')} />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchMovies.propTypes = {\n  handleSub: PropTypes.func.isRequired,\n};\n\nexport default SearchMovies;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'services/getApi';\nimport SearchMovies from 'components/SearchMovies';\nimport ListMovies from 'components/ListMovies';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setsearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery');\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    const abortController = new AbortController();\n\n    getSearchMovies(abortController, searchQuery)\n      .then(response => {\n        setMovies(response.data.results);\n      })\n      .catch(error => {\n        return error;\n      });\n\n    return () => {\n      abortController.abort();\n    };\n  }, [searchQuery]);\n\n  const handleSubmit = name => {\n    setsearchParams({ searchQuery: name });\n  };\n\n  return (\n    <>\n      <SearchMovies handleSub={handleSubmit} />\n      {movies && <ListMovies listMovies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'bad873a72299f6199f58673bb9d2d11e';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrending = async abort => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getSearchMovies = async (abort, query) => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getMovieDetails = async (abort, id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getMovieCredits = async (abort, id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nconst getMovieReviews = async (abort, id) => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`,\n    {\n      signal: abort.signal,\n    }\n  );\n  return response;\n};\n\nexport {\n  getTrending,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["List","styled","Item","listMovies","location","useLocation","map","id","title","name","to","state","from","Form","Input","Button","handleSub","useForm","register","handleSubmit","reset","onSubmit","trim","defaultValue","type","useState","movies","setMovies","useSearchParams","searchParams","setsearchParams","searchQuery","get","useEffect","abortController","AbortController","getSearchMovies","then","response","data","results","catch","error","abort","ListMovies","API_KEY","BASE_URL","getTrending","axios","signal","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}